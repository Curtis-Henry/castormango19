{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TableSchemaProvider = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _taggedTemplateLiteral2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteral\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _graphqlTag = _interopRequireDefault(require(\"graphql-tag\"));\n\nvar _reactApollo = require(\"react-apollo\");\n\nvar _auth = require(\"@8base/auth\");\n\nvar _TableSchemaContext = require(\"./TableSchemaContext\");\n\nfunction _templateObject() {\n  var data = (0, _taggedTemplateLiteral2.default)([\"\\n  query TablesSchema {\\n    tablesList {\\n      items {\\n        ...TableFragment\\n      }\\n      count\\n    }\\n  }\\n\\n  fragment TableFragment on Table {\\n    id\\n    name\\n    displayName\\n    isSystem\\n    fields {\\n      ...TableFieldFragment\\n    }\\n  }\\n\\n  fragment TableFieldFragment on TableField {\\n    ...CommonTableFieldFragment\\n    fieldTypeAttributes {\\n      ...TextFieldTypeAttributes\\n      ...NumberFieldTypeAttributes\\n      ...FileFieldTypeAttributes\\n      ...DateFieldTypeAttributes\\n      ...SwitchFieldTypeAttributes\\n      ...SmartFieldTypesAttributes\\n    }\\n  }\\n\\n  fragment CommonTableFieldFragment on TableField {\\n    id\\n    name\\n    displayName\\n    description\\n    fieldType\\n    fieldTypeAttributes {\\n      ...TextFieldTypeAttributes\\n      ...NumberFieldTypeAttributes\\n      ...FileFieldTypeAttributes\\n      ...DateFieldTypeAttributes\\n      ...SwitchFieldTypeAttributes\\n    }\\n    isList\\n    isRequired\\n    isUnique\\n    defaultValue\\n    isSystem\\n    isMeta\\n    relation {\\n      refFieldName\\n      refFieldDisplayName\\n      relationTableName\\n      relationFieldName\\n      refTable {\\n        id\\n        name\\n      }\\n      refFieldIsList\\n      refFieldIsRequired\\n    }\\n  }\\n\\n  fragment DateFieldTypeAttributes on DateFieldTypeAttributes {\\n    format\\n  }\\n\\n  fragment TextFieldTypeAttributes on TextFieldTypeAttributes {\\n    format\\n    fieldSize\\n  }\\n\\n  fragment NumberFieldTypeAttributes on NumberFieldTypeAttributes {\\n    format\\n    precision\\n    currency\\n    minValue\\n    maxValue\\n  }\\n\\n  fragment FileFieldTypeAttributes on FileFieldTypeAttributes {\\n    format\\n    maxSize\\n    typeRestrictions\\n  }\\n\\n  fragment SmartFieldTypesAttributes on SmartFieldTypeAttributes {\\n    format\\n    innerFields {\\n      name\\n      displayName\\n      description\\n      fieldType\\n      isList\\n      isRequired\\n      isUnique\\n      fieldTypeAttributes {\\n        ...TextFieldTypeAttributes\\n        ...NumberFieldTypeAttributes\\n        ...FileFieldTypeAttributes\\n        ...DateFieldTypeAttributes\\n        ...SwitchFieldTypeAttributes\\n      }\\n    }\\n  }\\n\\n  fragment SwitchFieldTypeAttributes on SwitchFieldTypeAttributes {\\n    format\\n    listOptions\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar TABLES_SCHEMA_QUERY = (0, _graphqlTag.default)(_templateObject());\n/**\r\n * Provider for 8base table schemas\r\n * @property {Function} children Children of the provider. Could be either react node or function with loading state.\r\n */\n\nvar TableSchemaProvider =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(TableSchemaProvider, _React$Component);\n\n  function TableSchemaProvider() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, TableSchemaProvider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(TableSchemaProvider)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"renderContent\", function (_ref) {\n      var data = _ref.data,\n          loading = _ref.loading;\n      var children = _this.props.children;\n      if (loading) return children({\n        loading: loading\n      });\n      return _react.default.createElement(_TableSchemaContext.TableSchemaContext.Provider, {\n        value: R.pathOr([], ['tablesList', 'items'], data)\n      }, children({\n        loading: loading\n      }));\n    });\n    return _this;\n  }\n\n  (0, _createClass2.default)(TableSchemaProvider, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isAuthorized = _this$props.auth.isAuthorized,\n          notifyOnNetworkStatusChange = _this$props.notifyOnNetworkStatusChange,\n          children = _this$props.children;\n      var rendered = null;\n\n      if (isAuthorized) {\n        rendered = _react.default.createElement(_reactApollo.Query, {\n          query: TABLES_SCHEMA_QUERY,\n          notifyOnNetworkStatusChange: notifyOnNetworkStatusChange\n        }, this.renderContent);\n      } else {\n        rendered = children({});\n      }\n\n      return rendered;\n    }\n  }]);\n  return TableSchemaProvider;\n}(_react.default.Component);\n\nexports.TableSchemaProvider = TableSchemaProvider;\nexports.TableSchemaProvider = TableSchemaProvider = (0, _auth.withAuth)(TableSchemaProvider);","map":null,"metadata":{},"sourceType":"script"}