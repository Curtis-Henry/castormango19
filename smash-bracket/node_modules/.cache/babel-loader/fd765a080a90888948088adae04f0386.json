{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FragmentsSchemaContainer = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar FragmentsSchemaContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(FragmentsSchemaContainer, _React$Component);\n\n  function FragmentsSchemaContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, FragmentsSchemaContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(FragmentsSchemaContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"state\", {\n      loading: true,\n      fragmentsSchema: null\n    });\n    return _this;\n  }\n\n  (0, _createClass2.default)(FragmentsSchemaContainer, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee() {\n        var uri, fragmentsSchema;\n        return _regenerator.default.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                uri = this.props.uri;\n                this.setState({\n                  loading: true\n                });\n                _context.next = 4;\n                return fetchFragmentsSchema(uri);\n\n              case 4:\n                fragmentsSchema = _context.sent;\n                this.setState({\n                  loading: false,\n                  fragmentsSchema: fragmentsSchema\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          fragmentsSchema = _this$state.fragmentsSchema;\n      var children = this.props.children;\n      return children({\n        loading: loading,\n        fragmentsSchema: fragmentsSchema\n      });\n    }\n  }]);\n  return FragmentsSchemaContainer;\n}(_react.default.Component);\n\nexports.FragmentsSchemaContainer = FragmentsSchemaContainer;\n\nvar fetchFragmentsSchema =\n/*#__PURE__*/\nfunction () {\n  var _ref = (0, _asyncToGenerator2.default)(\n  /*#__PURE__*/\n  _regenerator.default.mark(function _callee2(uri) {\n    var result, filteredData;\n    return _regenerator.default.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(uri, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                operationName: 'FragmentsSchema',\n                query: \"\\n        query FragmentsSchema {\\n          __schema {\\n            types {\\n              kind\\n              name\\n              possibleTypes {\\n                name\\n              }\\n            }\\n          }\\n        }\\n      \"\n              })\n            }).then(function (result) {\n              return result.json();\n            }).catch(function () {\n              return {\n                data: null\n              };\n            });\n\n          case 2:\n            result = _context2.sent;\n\n            if (!R.isNil(result.data)) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", null);\n\n          case 5:\n            filteredData = result.data.__schema.types.filter(function (type) {\n              return type.possibleTypes !== null;\n            });\n            result.data.__schema.types = filteredData;\n            return _context2.abrupt(\"return\", result.data);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n\n  return function fetchFragmentsSchema(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"script"}