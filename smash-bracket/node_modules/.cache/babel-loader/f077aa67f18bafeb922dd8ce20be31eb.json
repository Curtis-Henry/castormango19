{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EightBaseAppProvider = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _tableSchemaProvider = require(\"@8base/table-schema-provider\");\n\nvar _auth = require(\"@8base/auth\");\n\nvar _ApolloContainer = require(\"./ApolloContainer\");\n/**\n * `EightBaseAppProvider` universal provider which loads fragments schema and provides Apollo client with it, authentication and table schema.\n * @prop {string} [uri] - The 8base API field schema.\n * @prop {Object} [authClient] - The 8base auth client.\n * @prop {Function} [onRequestSuccess] - The callback which called when request is success.\n * @prop {Function} [onRequestError] - The callback which called when request is fail.\n * @prop {Function} [extendLinks] - Function to extend standart array of the links.\n * @prop {Function} [children] - The render function.\n */\n\n\nvar EightBaseAppProvider = function EightBaseAppProvider(_ref) {\n  var uri = _ref.uri,\n      authClient = _ref.authClient,\n      onRequestSuccess = _ref.onRequestSuccess,\n      onRequestError = _ref.onRequestError,\n      extendLinks = _ref.extendLinks,\n      children = _ref.children;\n  return _react.default.createElement(_auth.AuthProvider, {\n    authClient: authClient\n  }, _react.default.createElement(_ApolloContainer.ApolloContainer, {\n    uri: uri,\n    extendLinks: extendLinks,\n    onRequestSuccess: onRequestSuccess,\n    onRequestError: onRequestError\n  }, _react.default.createElement(_tableSchemaProvider.TableSchemaProvider, null, children)));\n};\n\nexports.EightBaseAppProvider = EightBaseAppProvider;","map":null,"metadata":{},"sourceType":"script"}